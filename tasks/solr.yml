---
- name: "{{ site_domain}} : Ensure Docker service started"
  service:
    name: docker
    state: started
    enabled: yes

- name: "{{ site_domain}} : Install pip docker-py"
  pip:
    name: docker-py
    state: present

- name: "{{ site_domain}} : Ensure solr dir exists"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ site_homedir }}/etc"
    - "{{ site_homedir }}/etc/solr"
    - "{{ site_homedir }}/etc/solr/{{ site_solr_core_name }}"

- name: "{{ site_domain}} : Ensure auth_basic files created"
  template:
    src: solr/auth_basic.j2
    dest: "{{ site_homedir }}/etc/solr/htpasswd"
    owner: "{{ site_user }}"
    group: "{{ site_user }}"
    mode: 0644
  when: site_solr_basic_auth != ''

- name: "{{ site_domain}} : Copy solr config"
  unarchive:
    remote_src: yes
    src: "{{ site_solr_config_archive }}"
    dest: "{{ site_homedir }}/etc/solr/{{ site_solr_core_name }}"
- name: "{{ site_domain}} : Register solr_container_name"
  set_fact:
    solr_container_name: "site_solr_{{ site_solr_core_name }}"
  when: solr_container_name is not defined

- name: "{{ site_domain}} : Solr docker container"
  docker_container:
    name: "{{ solr_container_name }}"
    image: solr:5.4
    state: started
    volumes:
      - "{{ site_homedir }}/etc/solr/{{ site_solr_core_name }}:/myconfig"
    published_ports:
      - "127.0.0.1:{{ site_solr_port }}:8983"
    restart_policy: always
    command: "solr-create -c {{ site_solr_core_name }} -d /myconfig"

- name: "{{ site_domain}} : Setup nginx vhost for Solr"
  include_role:
    name: nginx-vhosts
  vars:
    nginx_sites:
      "{{ site_solr_domain }}":
        template: solr/nginx.conf.j2
